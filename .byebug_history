c
mail(to: @user.user.email, subject: "Leave Details")
@user= leave_user
leave_user
c
mail(to: @user.user.email, subject: "Leave Details")
@user.user.email
@user= leave_user
leave_user
@user.user
@user.user.email
mail(to: @user.user.email, subject: "Leave Details")
c
CCCCCCCC
c
@user.user.email
@user.user
@user= leave_user
@user.user.email
leave_user
c
self
c
leave_detail(self)
UserMailer.leave_detail(self).deliver_now
leave_detail
c
leave.user
leave.user.update(total_leave:  leave.user.total_leave - sig)
 leave.user.total_leave - sig
sig  = leave.start_date.size
 leave.user.total_leave - sig
 leave.user.total_leave = sig
sig  = leave.user.total_leave = sig
sig  = leave.user.total_leave
sig  = leave.user
sig  = leave.start_date.size
leave.start_date.size
leave.start_date
leave
leave.present?
c
@current_user.leave_users.create(leave_params)
@current_user
leave
leave.present?
c
@leave.leave_users
@leave = @current_user
c
User.update_counters(@leave.total_leave)
User.update_counters(@leave.total_leave,total_leave)
User.update_counters(@leave.total_leave)
User.update_counters(:availed_leaves, @leave.total_leave)
User.update_counters(@leave.total_leave)
@leave.total_leave = total_leave
total_leave = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave = @current_user
c
User.update_column(@leave.total_leave)
@leave.total_leave = total_leave
total_leave = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave = @current_user
c
User.update_column(@leave.total_leave)
@leave.total_leave = total_leave
total_leave = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave = @current_user
c
@leave.total_leave = total_leave
total_leave = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave = @current_user
c
@count = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave.leave_users.select(:start_date).map(&:start_date).count
@leave.total_leave
@leave = @current_user
@leave.total_leave
c
@leave.total_leave = (@leave.total_leave - @leave.leave_users.select(:start_date).map(&:start_date).count)
@leave.total_leave
@current_user
@leave.leave_users.select(:start_date).map(&:start_date).count
@leave.total_leave
c
@leave.total_leave
@leave
@leave = @current_user
@leave.total_leave
total_leave
c
@current_user
User.find(params[@current_user])
c
User.find_by(id: params[@current_user])
 User
@total.total_leave
@total.total_leav
@total = User.find_by(id: params[@current_user])
@current_user
c
@leave.find( params[:total_leave]
leave_params
@leave.leave_users.create(leave_params)
@current_user
c
@leave.leave_users.create(leave_params).errors
@leave.leave_users.create(leave_params)
 @leave = @current_user
c
leave_params
c
@leave.leave_users.select(:start_date).map(:start_date).last.count
@leave.select(:start_date).map(:start_date).last.count
@leave
c
:start_date
@leave.leave_users.select(:start_date).map(:start_date).count
c
@leave.leave_users.select(:start_date).map(:start_date).count
leave_user.select(:start_date).map(:start_date).count
leave_users.select(:start_date).map(:start_date).count
@leave.leave_users.select(:start_date).map(:start_date).count
leave_users.select(:start_date).map(:start_date).count
@leave.leave_users
leave_users
c
@leave.leave_users
@leave = @current_user
c
leave_users.create
leave_users
@current_user
c
leave_params
c
leave_params
c
params
c
@leave.leave_user.create(leave_params)
@leave.leave_users.create(leave_params)
leave_params
leave_users
c
@leave
c
@leave
@leave.leave_users.create(leave_params)
@leave = @current_user
c
leave_params
c
@leave.leave_users.create(leave_params)
@leave = @current_user
c
leave_params
@leave = @current_user
c
@current_user.leave_users.create(params)
leave_user
@leave = @current_user
@leave
leave_params
@leave.leave_user.create(leave_params)
@current_user
c
params
paramas
@current_user.leave_users.create(params.as_json)
@current_user.leave_user.create(params.as_json)
@current_user
c
@user&.valid_password?(params[:password])
if @user&.valid_password?(params[:password])
    8:     if @user&.valid_password?(params[:password])
 @user = User.find_by_email(params[:email])
c
user.name
user
 User.all
f.input :user_id , :as => :select, :collection => User.all.collect{|user| [user.name, user.id]}
=> 24:       f.input :user_id , :as => :select, :collection => User.all.collect{|user| [user.name, user.id]}
c
user.name
User.all
f.input :user_id , :as => :select, :collection => User.all.collect{|user| [user.name, user.id]}
c
 @user = User.find_by_email(params[:email])
params[:email]
c
@users
c
@current_user = User.find(decoded[:user_id])
decoded = jwt_decode(header)
header = header.split(" ").last if header
header = request.headers["token"]
c
self.save
self
self.password_confirmation = self.password
self.password = rand(100000..999999).to_s
c
self.password_confirmation = self.password
self.password = rand(100000..999999).to_s
c
self.password = rand(100000..999999).to_s
rand(100000..999999)
self.password
self.password = rand(100000..999999)
c
self.password = rand(100000..999999)
c
self.password = rand(100000..999999)
self.password
c
User.create(params[:user].as_json).errors
User.create(params[:user].as_json)
super
params
c
params
continue
d
User.create(params[:user].as_json).errors
User.last
params
c
User.create(params[:user].as_json).errors
User.create(params[:user].as_json)
params
PARAMS
c
@current_user
current_user
exit
c
params[:data][:attributes]
params[:data]
params
user_params
c
user_params
@user = User.new(user_params)
   15: @user = User.new(user_params)
user_params
c
user_params
c
user_params
c
user_params
c
user_params
params
c
